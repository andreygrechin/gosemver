# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

project_name: gosemver

before:
  hooks:
    - go mod tidy
    - make lint
    - make vuln
    - make test

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    ldflags:
      - -s
      - -w
      - -X {{ .ModulePath }}/internal/config.Version={{ .Version }}
      - -X {{ .ModulePath }}/internal/config.Commit={{ .Commit }}
      - -X {{ .ModulePath }}/internal/config.BuildTime={{ .Date }}

kos:
  - repositories:
      - ghcr.io/andreygrechin/gosemver
    base_image: alpine:3.21.0
    labels:
      org.opencontainers.image.source: https://github.com/andreygrechin/gosemver
      org.opencontainers.image.url: https://github.com/andreygrechin/gosemver
      org.opencontainers.image.version: "{{ .Version }}"
      org.opencontainers.image.created: "{{ .CommitTimestamp }}"
      org.opencontainers.image.licenses: MIT
      org.opencontainers.image.description: "A tool to validate, compare, diff, and extract identifiers of semantic versions."
    annotations:
      org.opencontainers.image.source: https://github.com/andreygrechin/gosemver
      org.opencontainers.image.url: https://github.com/andreygrechin/gosemver
      org.opencontainers.image.version: "{{ .Version }}"
      org.opencontainers.image.created: "{{ .CommitTimestamp }}"
      org.opencontainers.image.licenses: MIT
      org.opencontainers.image.description: "A tool to validate, compare, diff, and extract identifiers of semantic versions."
    user: "10001:10001"
    tags:
      - latest
      - "{{ .Version }}"
    creation_time: "{{ .CommitTimestamp }}"
    ko_data_creation_time: "{{ .CommitTimestamp }}"
    sbom: spdx
    ldflags:
      - -s
      - -w
      - -X github.com/andreygrechin/gosemver/internal/config.Version={{ .Version }}
      - -X github.com/andreygrechin/gosemver/internal/config.BuildTime={{ .CommitTimestamp }}
      - -X github.com/andreygrechin/gosemver/internal/config.Commit="{{ .Commit }}"
    bare: true
    preserve_import_paths: false
    platforms:
      - linux/amd64
      - linux/arm64

archives:
  - id: default
    name_template: >-
      {{- .ProjectName }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end -}}
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    builds_info:
      group: root
      owner: root
      mtime: "{{ .CommitDate }}"
    files:
      - src: LICENSE*
        info:
          owner: root
          group: root
          mtime: "{{ .CommitDate }}"
      - src: README*
        info:
          owner: root
          group: root
          mtime: "{{ .CommitDate }}"
      - src: CHANGELOG*
        info:
          owner: root
          group: root
          mtime: "{{ .CommitDate }}"
      - src: NOTICE
        info:
          owner: root
          group: root
          mtime: "{{ .CommitDate }}"
      - src: licenses/*
        info:
          owner: root
          group: root
          mtime: "{{ .CommitDate }}"

sboms:
  - artifacts: archive

force_token: github

snapshot:
  version_template: "{{ incpatch .Version }}-snapshot+{{ .ShortCommit }}"

checksum:
  name_template: "{{ .ProjectName }}_checksums_SHA256.txt"
  algorithm: sha256

changelog:
  sort: asc
  use: github
  groups:
    - title: New features
      regexp: '^feat(\(.+\))??!?:.+$'
      order: 100
    - title: Security updates
      regexp: '^sec(\(.+\))??!?:.+$'
      order: 150
    - title: Bug fixes
      regexp: '^(fix|refactor)(\(.+\))??!?:.+$'
      order: 200
    - title: Dependency updates
      regexp: '^deps(\(.+\))??!?:.+$'
      order: 300
    - title: Documentation updates
      regexp: '^docs?(\(.+\))??!?:.+$'
      order: 400
    - title: Build process updates
      regexp: '^(build|ci)(\(.+\))??!?:.+$'
      order: 400
    - title: Other work
      order: 9999
  filters:
    exclude:
      - "^.$"
      - '^test(\(.+\))??!?:.+$'

release:
  draft: true
  make_latest: false
  replace_existing_draft: true
  name_template: "v{{ .Version }}"
  footer: |
    **Full Changelog**: https://github.com/andreygrechin/gosemver/compare/{{ .PreviousTag }}...{{ .Tag }}
